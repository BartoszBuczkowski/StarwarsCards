{"version":3,"sources":["styles/useStyles.ts","components/organisms/Footer/Footer.tsx","components/templates/Main.tsx","components/organisms/Heros/Heros.tsx","components/organisms/Starships/Starships.tsx","components/organisms/HeroContent/HeroContent.tsx","components/molecules/ActionButtons/ActionButtons.tsx","utils/getRandomIndex.ts","pages/App.tsx","index.tsx"],"names":["theme","createMuiTheme","palette","type","useStyles","makeStyles","heroContent","backgroundColor","background","paper","padding","spacing","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","height","display","flexDirection","cardMedia","cardContent","flexGrow","footer","root","width","maxWidth","Footer","classes","className","Typography","variant","color","align","Date","getFullYear","MainTemplate","children","CssBaseline","Heros","cards","winner","list","map","title","value","name","mass","birth_year","skin_color","Grid","container","index","item","xs","sm","md","style","transform","Card","CardContent","gutterBottom","component","List","ListItem","ListItemAvatar","Avatar","ListItemText","primary","secondary","Starships","model","starship_class","crew","_","HeroContent","competition","setCompetition","clearCards","changeCompetition","Container","paragraph","justify","Button","onClick","ActionButtons","setCards","renderCards","cardIndex","newCards","axios","get","max","Math","floor","random","getRandomIndex","then","response","data","catch","error","toast","message","autoClose","hideProgressBar","position","App","useState","setWinner","useEffect","undefined","participants","Number","indexOf","passengers","getWinner","ThemeProvider","Main","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f44b8e54.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\r\nimport { createMuiTheme } from '@material-ui/core';\r\n\r\nexport const theme = createMuiTheme({\r\n    palette: {\r\n        type: 'dark',\r\n    },\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    heroContent: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(8, 0, 6),\r\n    },\r\n    heroButtons: {\r\n        marginTop: theme.spacing(4),\r\n    },\r\n    cardGrid: {\r\n        paddingTop: theme.spacing(8),\r\n        paddingBottom: theme.spacing(8),\r\n    },\r\n    card: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    cardMedia: {\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    cardContent: {\r\n        flexGrow: 1,\r\n    },\r\n    footer: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(6),\r\n    },\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { FC } from 'react';\r\nimport { Typography } from '@material-ui/core';\r\nimport useStyles from '../../../styles/useStyles';\r\n\r\nconst Footer: FC = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <footer className={classes.footer}>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n                Copyright Â© Bartosz Buczkowski {new Date().getFullYear()}\r\n            </Typography>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { FC } from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Footer from '../organisms/Footer/Footer';\r\n\r\nconst MainTemplate: FC = ({ children }) => {\r\n    return (\r\n        <>\r\n            <CssBaseline />\r\n            <main>{children}</main>\r\n            <Footer />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MainTemplate;\r\n","import React, { FC } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { HeroData } from '../../../pages/ts';\r\nimport { Avatar, Card, CardContent, List, ListItem, ListItemAvatar, ListItemText, Typography } from '@material-ui/core';\r\nimport StarOutlineIcon from '@material-ui/icons/StarOutline';\r\nimport useStyles from '../../../styles/useStyles';\r\n\r\nexport interface HerosProps {\r\n    cards: HeroData[];\r\n    winner: number | null;\r\n}\r\n\r\nconst Heros: FC<HerosProps> = ({ cards, winner }) => {\r\n    const classes = useStyles();\r\n    const list = cards.map((card) => [\r\n        { title: 'Name', value: card?.name },\r\n        { title: 'Mass', value: card?.mass },\r\n        { title: 'Birth', value: card?.birth_year },\r\n        { title: 'Skin', value: card?.skin_color },\r\n    ]);\r\n\r\n    return (\r\n        <Grid container spacing={4}>\r\n            {cards.map((card, index) => (\r\n                <Grid\r\n                    key={index}\r\n                    item\r\n                    xs={12}\r\n                    sm={6}\r\n                    md={6}\r\n                    style={{ transform: `${winner === index ? 'scale(1.05)' : 'scale(1)'}` }}\r\n                >\r\n                    <Card className={classes.card}>\r\n                        <CardContent className={classes.cardContent}>\r\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                {card.name}\r\n                            </Typography>\r\n                            {winner === index && (\r\n                                <Typography gutterBottom variant=\"subtitle2\" component=\"p\">\r\n                                    Has a greater mass\r\n                                </Typography>\r\n                            )}\r\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                <List className={classes.root}>\r\n                                    {list[index].map(({ title, value }) => (\r\n                                        <ListItem key={title}>\r\n                                            <ListItemAvatar>\r\n                                                <Avatar>\r\n                                                    <StarOutlineIcon />\r\n                                                </Avatar>\r\n                                            </ListItemAvatar>\r\n                                            <ListItemText primary={title} secondary={value} />\r\n                                        </ListItem>\r\n                                    ))}\r\n                                </List>\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Heros;\r\n","import React, { FC } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { StarshipData } from '../../../pages/ts';\r\nimport { Avatar, Card, CardContent, List, ListItem, ListItemAvatar, ListItemText, Typography } from '@material-ui/core';\r\nimport StarOutlineIcon from '@material-ui/icons/StarOutline';\r\nimport useStyles from '../../../styles/useStyles';\r\n\r\ninterface StarshipsProps {\r\n    cards: StarshipData[];\r\n    winner: number | null;\r\n}\r\n\r\nconst Starships: FC<StarshipsProps> = ({ cards, winner }) => {\r\n    const classes = useStyles();\r\n    const list = cards.map((card) => [\r\n        { title: 'Name', value: card?.name },\r\n        { title: 'Model', value: card?.model },\r\n        { title: 'Class', value: card?.starship_class },\r\n        { title: 'Crew', value: card?.crew },\r\n    ]);\r\n    return (\r\n        <Grid container spacing={4}>\r\n            {cards.map((_, index) => (\r\n                <Grid\r\n                    key={index}\r\n                    item\r\n                    xs={12}\r\n                    sm={6}\r\n                    md={6}\r\n                    style={{ transform: `${winner === index ? 'scale(1.05)' : 'scale(1)'}` }}\r\n                >\r\n                    <Card className={classes.card}>\r\n                        <CardContent className={classes.cardContent}>\r\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                <List className={classes.root}>\r\n                                    {list[index].map(({ title, value }) => (\r\n                                        <ListItem key={title}>\r\n                                            <ListItemAvatar>\r\n                                                <Avatar>\r\n                                                    <StarOutlineIcon />\r\n                                                </Avatar>\r\n                                            </ListItemAvatar>\r\n                                            <ListItemText primary={title} secondary={value} />\r\n                                        </ListItem>\r\n                                    ))}\r\n                                </List>\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Starships;\r\n","import React, { FC } from 'react';\r\nimport { Button, Container, Grid, Typography } from '@material-ui/core';\r\nimport useStyles from '../../../styles/useStyles';\r\nimport { Competitions } from '../../../pages/ts';\r\n\r\ninterface HeroContentProps {\r\n    competition: Competitions;\r\n    clearCards: () => void;\r\n    setCompetition: (competition: Competitions) => void;\r\n}\r\n\r\nconst HeroContent: FC<HeroContentProps> = ({ competition, setCompetition, clearCards }) => {\r\n    const classes = useStyles();\r\n\r\n    const changeCompetition = (competition: Competitions) => {\r\n        clearCards();\r\n        setCompetition(competition);\r\n    };\r\n    return (\r\n        <div className={classes.heroContent}>\r\n            <Container maxWidth=\"sm\">\r\n                <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n                    Starwars\r\n                </Typography>\r\n                <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\r\n                    Change competition. Compare heros or starships from your favorite movie universe.\r\n                </Typography>\r\n                <div className={classes.heroButtons}>\r\n                    <Grid container spacing={2} justify=\"center\">\r\n                        <Grid item>\r\n                            <Button\r\n                                variant={competition === 'people' ? 'contained' : 'outlined'}\r\n                                color=\"primary\"\r\n                                onClick={() => changeCompetition('people')}\r\n                            >\r\n                                Heros\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button\r\n                                variant={competition === 'starships' ? 'contained' : 'outlined'}\r\n                                color=\"primary\"\r\n                                onClick={() => changeCompetition('starships')}\r\n                            >\r\n                                Starships\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HeroContent;\r\n","import { Button, Grid } from '@material-ui/core';\r\nimport React, { FC } from 'react';\r\nimport useStyles from '../../../styles/useStyles';\r\nimport axios, { AxiosError, AxiosResponse } from 'axios';\r\nimport { getRandomIndex } from '../../../utils/getRandomIndex';\r\nimport { HeroData, StarshipData, Cards, Competitions } from '../../../pages/ts';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport interface ActionButtonsProps {\r\n    cards: Cards[] | undefined;\r\n    competition: Competitions;\r\n    setCards: (cards: Cards[]) => void;\r\n}\r\n\r\nconst ActionButtons: FC<ActionButtonsProps> = ({ cards = [], setCards, competition }) => {\r\n    function renderCards(cardIndex: 0 | 1) {\r\n        const newCards: Cards[] | [] = [...cards];\r\n        axios\r\n            .get(`https://swapi.dev/api/${competition}/${getRandomIndex(competition)}`)\r\n            .then((response: AxiosResponse<HeroData | StarshipData>) => {\r\n                newCards[cardIndex] = response.data;\r\n                setCards(newCards);\r\n            })\r\n            .catch((error: AxiosError) => {\r\n                toast(`${error.message}. Try again.`);\r\n            });\r\n    }\r\n\r\n    const left = () => renderCards(0);\r\n    const right = () => renderCards(1);\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.heroButtons}>\r\n            <ToastContainer autoClose={3500} hideProgressBar position=\"top-right\" />\r\n            <Grid container spacing={2} justify=\"center\">\r\n                <Grid item>\r\n                    <Button onClick={left}>left</Button>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Button onClick={right}>right</Button>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ActionButtons;\r\n","import { Competitions } from '../pages/ts';\r\n\r\nexport function getRandomIndex(competition: Competitions): number {\r\n    const max = competition === 'people' ? 83 : 13;\r\n    return Math.floor(Math.random() * (max + 1)) + 1;\r\n}\r\n","import React, { FC, useState, useEffect } from 'react';\nimport { Cards, Competitions, HeroData, StarshipData } from './ts';\nimport { Container } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/styles';\nimport MainTemplate from '../components/templates/Main';\nimport useStyles, { theme } from '../styles/useStyles';\nimport Heros from '../components/organisms/Heros/Heros';\nimport Starships from '../components/organisms/Starships/Starships';\nimport HeroContent from '../components/organisms/HeroContent/HeroContent';\nimport ActionButtons from '../components/molecules/ActionButtons/ActionButtons';\n\nconst App: FC = () => {\n    const [competition, setCompetition] = useState<Competitions>('people');\n    const [cards, setCards] = useState<Cards[]>([]);\n    const [winner, setWinner] = useState<number | null>(null);\n    const classes = useStyles();\n\n    function getWinner() {\n        if (competition === 'people') {\n            const participants = (cards as HeroData[])?.map(({ mass }) => Number(mass));\n            const winner = participants.indexOf(Math.max(...participants));\n            return setWinner(winner);\n        }\n        if (competition === 'starships') {\n            const participants = (cards as StarshipData[])?.map(({ passengers }) => Number(passengers));\n            const winner = participants.indexOf(Math.max(...participants));\n            return setWinner(winner);\n        }\n        return setWinner(null);\n    }\n\n    useEffect(() => {\n        const emptyCard = cards[0] === undefined || cards[1] === undefined;\n        if (!emptyCard) getWinner();\n    }, [cards]);\n\n    return (\n        <div className=\"app\">\n            <ThemeProvider theme={theme}>\n                <MainTemplate>\n                    <HeroContent\n                        competition={competition}\n                        setCompetition={setCompetition}\n                        clearCards={() => setCards([])}\n                    />\n                    <ActionButtons cards={cards} setCards={setCards} competition={competition} />\n                    {cards && (\n                        <Container className={classes.cardGrid} maxWidth=\"md\">\n                            {competition === 'people' && <Heros cards={cards as HeroData[]} winner={winner} />}\n                            {competition === 'starships' && (\n                                <Starships cards={cards as StarshipData[]} winner={winner} />\n                            )}\n                        </Container>\n                    )}\n                </MainTemplate>\n            </ThemeProvider>\n        </div>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './pages/App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}